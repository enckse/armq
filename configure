#!/bin/bash
BRD="broadcast"
SND="sendrcv"
DBG="debugger"
ALL="$BRD $SND $DBG"
SRC=$(find src/ -type f | grep -v -E "$BRD.d|$SND.d|$DBG.d" | tr '\n' ' ')
WINSRC=$(echo $SRC | sed -e "s/\//\\\\\\\\/g")
BIN=bin
WIN32=$BIN/win32/
WIN64=$BIN/win64/
LIN64=$BIN/lin64/
DEFS=defs/
CMDS="clean"
MAKEFILE=Makefile
echo "# Generated "$(date +%s) > $MAKEFILE

_mk() {
    CMDS=$CMDS" "$1
    echo "$1:"
    echo -e '\t'"mkdir -p $1"
}

if [ -z "$DMD" ]; then
    echo "no DMD detected..."
else
    _win32() {
        _mk "win32"
        for d in $ALL; do
            echo -e '\t'"wine $DMD -m32 -of$WIN32$d.dll $SRC src/$d.d"
        done
    }
    _win32 >> $MAKEFILE
fi

if [ -x "$(command -v dmd)" ]; then
    _linux64() {
        _mk "linux64"
        for d in $ALL; do
            echo -e '\t'"dmd -m64 -defaultlib=libphobos2.so -fPIC -shared -of$LIN64$d.so src/$d.d $SRC" 
        done
    }
    _linux64 >> $MAKEFILE
else
    echo "no dmd for linux..."
fi

if [ -x "$(command -v dmd64)" ]; then
    _win64(){
        _mk "win64"
        for d in $ALL; do
            df=$DEFS$d.def
            echo "LIBRARY \"$d.dll\"" > $df
            echo "EXPORTS RVExtension" >> $df
            echo -e '\t'"dmd64 -of$WIN64$d.dll $SRC src/$d.d $df"
        done
    }
    _win64 >> $MAKEFILE
else
    echo "no dmd64 wrapper..."
fi

if [[ $CMDS != "clean" ]]; then
    sed -i "1s/^/all: $CMDS\n/" $MAKEFILE
    echo "clean:" >> $MAKEFILE
    echo -e '\t'"rm -rf $BIN" >> $MAKEFILE
    echo -e '\t'"mkdir -p $BIN" >> $MAKEFILE
else
    echo "no valid commands to make"
    exit 1
fi

